# S3 Bucket Module Metadata Example
# Based on terraform-aws-modules/terraform-aws-s3-bucket

# Type 1: Key:Value Pair Metadata (User-defined tags)
tags:
  provider: aws
  resource: s3
  cost: medium
  costapprox: 500/month
  category: storage
  compliance: soc2
  environment: production
  team: platform
  backup: enabled
  encryption: aes256
  replication: cross-region
  approval_required: true
  data_classification: confidential

# Type 2: Predefined Patterns (T-shirt sizes/Decorators)
patterns:
  small_dev:
    description: "Small development S3 bucket with basic features"
    versioning:
      enabled: false
    lifecycle_rule: []
    server_side_encryption_configuration:
      rule:
        apply_server_side_encryption_by_default:
          sse_algorithm: AES256
    block_public_acls: true
    block_public_policy: true
    ignore_public_acls: true
    restrict_public_buckets: true
    force_destroy: true
    
  medium_staging:
    description: "Medium staging S3 bucket with versioning and lifecycle"
    versioning:
      enabled: true
    lifecycle_rule:
      - id: "transition_to_ia"
        status: "Enabled"
        transition:
          days: 30
          storage_class: "STANDARD_IA"
    server_side_encryption_configuration:
      rule:
        apply_server_side_encryption_by_default:
          sse_algorithm: AES256
    block_public_acls: true
    block_public_policy: true
    ignore_public_acls: true
    restrict_public_buckets: true
    force_destroy: false
    
  large_prod:
    description: "Large production S3 bucket with full security and compliance features"
    versioning:
      enabled: true
      mfa_delete: true
    lifecycle_rule:
      - id: "transition_to_ia_and_glacier"
        status: "Enabled"
        transition:
          - days: 30
            storage_class: "STANDARD_IA"
          - days: 90
            storage_class: "GLACIER"
    server_side_encryption_configuration:
      rule:
        apply_server_side_encryption_by_default:
          sse_algorithm: aws:kms
          kms_master_key_id: "alias/s3-encryption-key"
    object_lock_configuration:
      object_lock_enabled: "Enabled"
      rule:
        default_retention:
          mode: "GOVERNANCE"
          days: 365
    replication_configuration:
      role: "arn:aws:iam::123456789012:role/replication-role"
      rules:
        - id: "cross-region-replication"
          status: "Enabled"
          destination:
            bucket: "arn:aws:s3:::backup-bucket"
            storage_class: "STANDARD_IA"
    attach_deny_insecure_transport_policy: true
    attach_require_latest_tls_policy: true
    attach_deny_unencrypted_object_uploads: true
    block_public_acls: true
    block_public_policy: true
    ignore_public_acls: true
    restrict_public_buckets: true
    force_destroy: false
    
  web_hosting:
    description: "S3 bucket configured for static website hosting"
    versioning:
      enabled: true
    website:
      index_document: "index.html"
      error_document: "error.html"
    cors_rule:
      - allowed_headers: ["*"]
        allowed_methods: ["GET", "HEAD"]
        allowed_origins: ["*"]
        expose_headers: ["ETag"]
        max_age_seconds: 3000
    server_side_encryption_configuration:
      rule:
        apply_server_side_encryption_by_default:
          sse_algorithm: AES256
    block_public_acls: false
    block_public_policy: false
    ignore_public_acls: false
    restrict_public_buckets: false
    force_destroy: true

# Type 3: Standalone Provider Block (Technical metadata for standalone consumption)
standaloneProviderBlock: |
  variable "aws_region" {
    description = "The AWS region to deploy resources in"
    type        = string
    default     = "us-east-1"
  }
  
  provider "aws" {
    region = var.aws_region
  }

# Additional metadata for registry/UI filtering
metadata:
  source: "terraform-aws-modules/s3-bucket/aws"
  version: "~> 4.0"
  terraform_version: ">= 1.5.7"
  provider_version: ">= 6.0"
  last_updated: "2024-06-25"
  maintainer: "terraform-aws-modules"
  documentation: "https://github.com/terraform-aws-modules/terraform-aws-s3-bucket"
  examples: "https://github.com/terraform-aws-modules/terraform-aws-s3-bucket/tree/master/examples"
  
# Usage examples for AI/automation
usage_examples:
  - name: "Basic private bucket"
    pattern: "small_dev"
    description: "Simple private S3 bucket for development"
  - name: "Production data bucket"
    pattern: "large_prod"
    description: "High-security bucket for production data with encryption and compliance"
  - name: "Static website"
    pattern: "web_hosting"
    description: "S3 bucket configured for static website hosting"